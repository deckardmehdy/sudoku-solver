"""
    Deckard Mehdy | deckardmehdy@gmail.com | github.com/deckardmehdy
    
    This file returns one of two data sets (DS):
    * DS 1:
        - Generated using [https://github.com/Kyubyong/sudoku/blob/master/generate_sudoku.py]
        - 1000 unique sudoku puzzles with varying difficulty levels
    * DS 2:
        - Obtained from [https://github.com/Kyubyong/sudoku/blob/master/data/test.csv]
        - 30 unique sudoku puzzles with distinct difficulty levels:
            ~ Easy = 1-6
            ~ Medium = 7-12
            ~ Hard = 13-18
            ~ Expert = 19-24
            ~ Evil = 25-30
"""

import pickle, numpy as np

def str_to_list(string):
    list = np.zeros((9,9),dtype=int)
    for i in range(9):
        for j in range(9):
            list[i][j] = int(string[(9*i)+j])
    return list

def get(dataSet):
    if dataSet == 1:
        puzzles, solutions = [], []
        with open("unique_puzzles.txt", "rb") as fp:
            puzzles = pickle.load(fp)
        with open("unique_solutions.txt", "rb") as fp:
            solutions = pickle.load(fp)
        
    elif dataSet == 2:
        puzzles_raw =   ["080032001703080002500007030050001970600709008047200050020600009800090305300820010",
                         "000009007060000800789062350430600590090508020018004073043210786005000040100400000",
                         "900401007047508000010700408002100003309000206400003700706009050000305690200604001",
                         "100000203078026401340107000050002806080000010601700020000801042804530160506000009",
                         "600200400015000020024100003102090305030501060507040208200009630050000870009008002",
                         "021400080400150000605038400503607200000090000008504906006710509000043007040005120",
                         "500901008008000500060040090600104007009000800700209003090010070007000600300708005",
                         "400006080003040500000300000809401300100000007005709102000004000006030200030800001",
                         "000050340003400009000700012900060005040000090700030004150007000200001800074020000",
                         "000080100050039080109700300060000200720000016005000030002003804070910020003050000",
                         "007008000030901620060000008140307060000090000070605091500000040013804050000500200",
                         "010305600000200091070000200400010000007080300000060005001000030860007000003106080",
                         "200100004000800500070050900690205000000070000000604015006080030004003000900002008",
                         "471002008208001000000000002090018000004000500000320090700000000000600907300200465",
                         "210500000570942000008000000400000280000605000063000001000000100000214097000006053",
                         "004029000000006703000000050100700036900000008380004002050000000603200000000310200",
                         "000050310400130600000008004065000003080000050300000970700800000006071009048060000",
                         "000040003400008020030900500509000006004090700700000409003001060010500002600070000",
                         "000300029008050006013000080800070000060090050000060001030000290900010600570002000",
                         "000309800400010020560008001830000100000000000002000086600700039070050002001203000",
                         "000609000209000000700010380000800041028090650670001000093020006000000405000905000",
                         "080400300000009004053700090800000045001000900320000008070004610900300000002008070",
                         "000004380800000002000895700000080073007000500410050000009513000300000007085600000",
                         "060000050307000800800200007106008000004375100000400903600002009003000702090000030",
                         "050400000070350014001890200018000000005186900000000580002075100560013090000008020",
                         "090600000012080000087951000860190000030020080000038091000317560000060270000005010",
                         "900006007006014000010900460060350002029000750800029040038007020000840300600100009",
                         "000008015103000800509010004020509000300000009000601050400020508002000107930700000",
                         "000910003803075200020000900070400102050000040204007030005000060006730501400068000",
                         "397050000000001300006030905000006052060507030950300000705040600008200000000070423"]
               
        solutions_raw = ["489532761713486592562917834258341976631759248947268153125673489876194325394825617",
                         "351849267264753819789162354432671598697538421518924673943215786875396142126487935",
                         "928461537647538129513792468872156943359847216461923785736219854184375692295684371",
                         "165498273978326451342157698457912836289643715631785924793861542824539167516274389",
                         "673285491815934726924176583162897345438521967597643218281759634356412879749368152",
                         "321479685489156372675238491593687214264391758718524936836712549152943867947865123",
                         "574961238918327546263845791682134957439576812751289463895612374127453689346798125",
                         "452916783683247519791358624879421356124563897365789142218674935946135278537892461",
                         "617259348823416579495783612932164785546872193781935264158397426269541837374628951",
                         "237485169456139782189726345361547298724398516895261437912673854578914623643852971",
                         "927468135835971624461253978149387562356192487278645391592716843613824759784539216",
                         "912345678346278591578691243435712869627589314189463725751824936864937152293156487",
                         "259137684461829573378456921693215847145378296782694315526781439814963752937542168",
                         "471932658268451379935876142693518724824769531157324896746195283582643917319287465",
                         "214538769576942318938167425459371286721685934863429571697853142385214697142796853",
                         "734529681519846723862173459145782936927631548386954172251468397673295814498317265",
                         "879654312452139687613728594965487123187392456324516978791843265536271849248965731",
                         "195247683476358921238916574589734216364192758721685439953421867817569342642873195",
                         "657348129298157436413629587849571362361294758725863941134786295982415673576932814",
                         "217369845489517623563428971835672194196834257742195386624781539378956412951243768",
                         "381649572259783164746512389935876241128394657674251938593428716862137495417965823",
                         "789415326216839754453726891897163245641582937325947168578294613964371582132658479",
                         "971264385854731692263895741592186473637429518418357269749513826326948157185672934",
                         "469783251327651894815294367136928475984375126752416983678132549543869712291547638",
                         "253461879879352614641897253718539462425186937936724581382975146564213798197648325",
                         "593672148612483957487951326865194732139726485724538691248317569351869274976245813",
                         "943586217786214935215973468467351892329468751851729643538697124192845376674132589",
                         "247368915163954872589217364624539781315872649798641253476123598852496137931785426",
                         "547912683893675214621843975379486152158329746264157839735291468986734521412568397",
                         "397654281542981376186732945873496152264517839951328764725143698438269517619875423"]
                 
        puzzles, solutions = [], []
        for puzzle in puzzles_raw:
            puzzles.append(str_to_list(puzzle))
        for solution in solutions_raw:
            solutions.append(str_to_list(solution))

    return puzzles,solutions
